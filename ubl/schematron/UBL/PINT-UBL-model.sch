<!-- Schematron binding rules automatically generated by Oriol BausÃ -->
<!-- Data binding to UBL syntax for model -->
<!-- Timestamp: 2020-02-11 12:09:56 +0200 -->
<pattern xmlns="http://purl.oclc.org/dsdl/schematron" is-a="model" id="UBL-model">
  <param name="ibr-01" value="(cbc:CustomizationID) != ''"/>
  <param name="ibr-02" value="(cbc:ID) !=''"/>
  <param name="ibr-03" value="(cbc:IssueDate) !=''"/>
  <param name="ibr-04" value="(cbc:InvoiceTypeCode) !='' or (cbc:CreditNoteTypeCode) !=''"/>
  <param name="ibr-05" value="(cbc:DocumentCurrencyCode) !=''"/>
  <param name="ibr-06" value="(cac:AccountingSupplierParty/cac:Party/cac:PartyLegalEntity/cbc:RegistrationName) !=''"/>
  <param name="ibr-07" value="(cac:AccountingCustomerParty/cac:Party/cac:PartyLegalEntity/cbc:RegistrationName) !=''"/>
  <param name="ibr-08" value="exists(cac:AccountingSupplierParty/cac:Party/cac:PostalAddress)"/>
  <param name="ibr-09" value="(cac:Country/cbc:IdentificationCode) != ''"/>
  <param name="ibr-10" value="exists(cac:AccountingCustomerParty/cac:Party/cac:PostalAddress)"/>
  <param name="ibr-11" value="(cac:Country/cbc:IdentificationCode) != ''"/>
  <param name="ibr-12" value="exists(cbc:LineExtensionAmount)"/>
  <param name="ibr-13" value="exists(cbc:TaxExclusiveAmount)"/>
  <param name="ibr-14" value="exists(cbc:TaxInclusiveAmount)"/>
  <param name="ibr-15" value="exists(cbc:PayableAmount)"/>
  <param name="ibr-16" value="exists(cac:InvoiceLine) or exists(cac:CreditNoteLine)"/>
  <param name="ibr-17" value="exists(cac:PartyName/cbc:Name) and (not(cac:PartyName/cbc:Name = ../cac:AccountingSupplierParty/cac:Party/cac:PartyName/cbc:Name) and not(cac:PartyIdentification/cbc:ID = ../cac:AccountingSupplierParty/cac:Party/cac:PartyIdentification/cbc:ID) )"/>
  <param name="ibr-18" value="(cac:PartyName/cbc:Name) != ''"/>
  <param name="ibr-19" value="exists(cac:PostalAddress)"/>
  <param name="ibr-20" value="(cac:Country/cbc:IdentificationCode) != ''"/>
  <param name="ibr-21" value="(cbc:ID) != ''"/>
  <param name="ibr-22" value="exists(cbc:InvoicedQuantity) or exists(cbc:CreditedQuantity)"/>
  <param name="ibr-23" value="exists(cbc:InvoicedQuantity/@unitCode) or exists(cbc:CreditedQuantity/@unitCode)"/>
  <param name="ibr-24" value="exists(cbc:LineExtensionAmount)"/>
  <param name="ibr-25" value="(cac:Item/cbc:Name) != ''"/>
  <param name="ibr-26" value="exists(cac:Price/cbc:PriceAmount)"/>
  <param name="ibr-27" value="(cac:Price/cbc:PriceAmount) &gt;= 0"/>
  <param name="ibr-28" value="(cac:Price/cac:AllowanceCharge/cbc:BaseAmount) &gt;= 0 or not(exists(cac:Price/cac:AllowanceCharge/cbc:BaseAmount))"/>
  <param name="ibr-29" value="(exists(cbc:EndDate) and exists(cbc:StartDate) and xs:date(cbc:EndDate) &gt;= xs:date(cbc:StartDate)) or not(exists(cbc:StartDate)) or not(exists(cbc:EndDate))"/>
  <param name="ibr-30" value="(exists(cbc:EndDate) and exists(cbc:StartDate) and xs:date(cbc:EndDate) &gt;= xs:date(cbc:StartDate)) or not(exists(cbc:StartDate)) or not(exists(cbc:EndDate))"/>
  <param name="ibr-31" value="exists(cbc:Amount) "/>
  <param name="ibr-33" value="exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)"/>
  <param name="ibr-36" value="exists(cbc:Amount)"/>
  <param name="ibr-38" value="exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)"/>
  <param name="ibr-41" value="exists(cbc:Amount)"/>
  <param name="ibr-42" value="exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)"/>
  <param name="ibr-43" value="exists(cbc:Amount)"/>
  <param name="ibr-44" value="exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)"/>
  <param name="ibr-49" value="exists(cbc:PaymentMeansCode)"/>
  <param name="ibr-52" value="(cbc:ID) != ''"/>
  <param name="ibr-53" value="every $taxcurrency in cbc:TaxCurrencyCode satisfies exists(//cac:TaxTotal/cbc:TaxAmount[@currencyID=$taxcurrency])"/>
  <param name="ibr-54" value="exists(cbc:Name) and exists(cbc:Value)"/>
  <param name="ibr-55" value="exists(cac:InvoiceDocumentReference/cbc:ID)"/>
  <param name="ibr-56" value="exists(cac:PartyTaxScheme/cbc:CompanyID)"/>
  <param name="ibr-57" value="exists(cac:Country/cbc:IdentificationCode)"/>
  <param name="ibr-62" value="exists(@schemeID)"/>
  <param name="ibr-63" value="exists(@schemeID)"/>
  <param name="ibr-64" value="exists(@schemeID)"/>
  <param name="ibr-65" value="exists(@listID)"/>
  <param name="ibr-co-03" value="(exists(cbc:TaxPointDate) and not(cac:InvoicePeriod/cbc:DescriptionCode)) or (not(cbc:TaxPointDate) and exists(cac:InvoicePeriod/cbc:DescriptionCode)) or (not(cbc:TaxPointDate) and not(cac:InvoicePeriod/cbc:DescriptionCode))"/>
  <param name="ibr-co-05" value="true()"/>
  <param name="ibr-co-06" value="true()"/>
  <param name="ibr-co-07" value="true()"/>
  <param name="ibr-co-08" value="true()"/>
  <param name="ibr-co-10" value="(xs:decimal(cbc:LineExtensionAmount) = (round(sum(//(cac:InvoiceLine|cac:CreditNoteLine)/xs:decimal(cbc:LineExtensionAmount)) * 10 * 10) div 100))"/>
  <param name="ibr-co-11" value="xs:decimal(cbc:AllowanceTotalAmount) = (round(sum(../cac:AllowanceCharge[cbc:ChargeIndicator=false()]/xs:decimal(cbc:Amount)) * 10 * 10) div 100) or  (not(cbc:AllowanceTotalAmount) and not(../cac:AllowanceCharge[cbc:ChargeIndicator=false()]))"/>
  <param name="ibr-co-12" value="xs:decimal(cbc:ChargeTotalAmount) = (round(sum(../cac:AllowanceCharge[cbc:ChargeIndicator=true()]/xs:decimal(cbc:Amount)) * 10 * 10) div 100) or (not(cbc:ChargeTotalAmount) and not(../cac:AllowanceCharge[cbc:ChargeIndicator=true()]))"/>
  <param name="ibr-co-13" value="((cbc:ChargeTotalAmount) and (cbc:AllowanceTotalAmount) and (xs:decimal(cbc:TaxExclusiveAmount) = round((xs:decimal(cbc:LineExtensionAmount) + xs:decimal(cbc:ChargeTotalAmount) - xs:decimal(cbc:AllowanceTotalAmount)) * 10 * 10) div 100 ))  or (not(cbc:ChargeTotalAmount) and (cbc:AllowanceTotalAmount) and (xs:decimal(cbc:TaxExclusiveAmount) = round((xs:decimal(cbc:LineExtensionAmount) - xs:decimal(cbc:AllowanceTotalAmount)) * 10 * 10 ) div 100)) or ((cbc:ChargeTotalAmount) and not(cbc:AllowanceTotalAmount) and (xs:decimal(cbc:TaxExclusiveAmount) = round((xs:decimal(cbc:LineExtensionAmount) + xs:decimal(cbc:ChargeTotalAmount)) * 10 * 10 ) div 100)) or (not(cbc:ChargeTotalAmount) and not(cbc:AllowanceTotalAmount) and (xs:decimal(cbc:TaxExclusiveAmount) = xs:decimal(cbc:LineExtensionAmount)))"/>
  <param name="ibr-co-15" value="every $Currency in cbc:DocumentCurrencyCode satisfies (cac:LegalMonetaryTotal/xs:decimal(cbc:TaxInclusiveAmount) = round( (cac:LegalMonetaryTotal/xs:decimal(cbc:TaxExclusiveAmount) + cac:TaxTotal/xs:decimal(cbc:TaxAmount[@currencyID=$Currency])) * 10 * 10) div 100)"/>
  <param name="ibr-co-16" value="(xs:decimal(cbc:PrepaidAmount) and not(xs:decimal(cbc:PayableRoundingAmount)) and (xs:decimal(cbc:PayableAmount) = (round((xs:decimal(cbc:TaxInclusiveAmount) - xs:decimal(cbc:PrepaidAmount)) * 10 * 10) div 100))) or (not(xs:decimal(cbc:PrepaidAmount)) and not(xs:decimal(cbc:PayableRoundingAmount)) and xs:decimal(cbc:PayableAmount) = xs:decimal(cbc:TaxInclusiveAmount)) or (xs:decimal(cbc:PrepaidAmount) and xs:decimal(cbc:PayableRoundingAmount) and ((round((xs:decimal(cbc:PayableAmount) - xs:decimal(cbc:PayableRoundingAmount)) * 10 * 10) div 100) = (round((xs:decimal(cbc:TaxInclusiveAmount) - xs:decimal(cbc:PrepaidAmount)) * 10 * 10) div 100))) or (not(xs:decimal(cbc:PrepaidAmount)) and xs:decimal(cbc:PayableRoundingAmount) and ((round((xs:decimal(cbc:PayableAmount) - xs:decimal(cbc:PayableRoundingAmount)) * 10 * 10) div 100) = xs:decimal(cbc:TaxInclusiveAmount))) "/>
  <param name="ibr-co-19" value="exists(cbc:StartDate) or exists(cbc:EndDate) or (exists(cbc:DescriptionCode) and not(exists(cbc:StartDate)) and not(exists(cbc:EndDate)))"/>
  <param name="ibr-co-20" value="exists(cbc:StartDate) or exists(cbc:EndDate)"/>
  <param name="ibr-co-21" value="exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)"/>
  <param name="ibr-co-22" value="exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)"/>
  <param name="ibr-co-24" value="exists(cbc:AllowanceChargeReason) or exists(cbc:AllowanceChargeReasonCode)"/>
  <param name="ibr-co-25" value="((. &gt; 0) and (exists(//cbc:DueDate) or exists(//cac:PaymentTerms/cbc:Note))) or (. &lt;= 0)"/>
  <param name="ibr-co-26" value="exists(cac:Party/cac:PartyTaxScheme/cbc:CompanyID) or exists(cac:Party/cac:PartyIdentification/cbc:ID) or exists(cac:Party/cac:PartyLegalEntity/cbc:CompanyID)"/>
  <param name="ibr-tax-01" value="every $category in (//cac:AllowanceCharge/cac:TaxCategory/normalize-space(cbc:ID), //cac:ClassifiedTaxCategory/normalize-space(cbc:ID)) satisfies  exists(cac:TaxTotal/cac:TaxSubtotal/cac:TaxCategory[normalize-space(cbc:ID) = $category])"/>
  <param name="ibr-tax-08" value="let $category := cac:TaxCategory/cbc:ID return let $rate := cac:TaxCategory/cbc:Percent return cbc:TaxableAmount = sum(//cac:InvoiceLine[cac:Item/cac:ClassifiedTaxCategory[xs:decimal(cbc:Percent) = $rate and cbc:ID = $category]]/xs:decimal(cbc:LineExtensionAmount)) + sum(//cac:AllowanceCharge[cbc:ChargeIndicator=true()][(cac:TaxCategory/cbc:ID = $category and cac:TaxCategory/xs:decimal(cbc:Percent) = $rate)]/xs:decimal(cbc:Amount)) - sum(//cac:AllowanceCharge[cbc:ChargeIndicator=false()][(cac:TaxCategory/cbc:ID = $category and cac:TaxCategory/xs:decimal(cbc:Percent) = $rate)]/xs:decimal(cbc:Amount)) "/>
  <param name="ibr-tax-09" value="(abs(xs:decimal(cbc:TaxAmount)) - 1 &lt;  round((abs(xs:decimal(cbc:TaxableAmount)) * (cac:TaxCategory/xs:decimal(cbc:Percent) div 100)) * 10 * 10) div 100 ) and (abs(xs:decimal(cbc:TaxAmount)) + 1 &gt;  round((abs(xs:decimal(cbc:TaxableAmount)) * (cac:TaxCategory/xs:decimal(cbc:Percent) div 100)) * 10 * 10) div 100 )"/>
  <param name="Invoice_Period " value="cac:InvoicePeriod"/>
  <param name="Document_totals " value="cac:LegalMonetaryTotal"/>
  <param name="Amount_due" value="/ubl:Invoice/cac:LegalMonetaryTotal/cbc:PayableAmount "/>
  <param name="Payee" value="cac:PayeeParty"/>
  <param name="Tax_Representative_postal_address" value="cac:TaxRepresentativeParty/cac:PostalAddress"/>
  <param name="Tax_Representative" value="cac:TaxRepresentativeParty"/>
  <param name="Seller_electronic_address" value="cac:AccountingSupplierParty/cac:Party/cbc:EndpointID"/>
  <param name="Seller_postal_address" value="cac:AccountingSupplierParty/cac:Party/cac:PostalAddress"/>
  <param name="Seller" value="cac:AccountingSupplierParty"/>
  <param name="Invoice_Line " value="cac:InvoiceLine | cac:CreditNoteLine"/>
  <param name="Invoice_Line_Period " value="cac:InvoiceLine/cac:InvoicePeriod | cac:CreditNoteLine/cac:InvoicePeriod"/>
  <param name="Document_level_allowances " value="/ubl:Invoice/cac:AllowanceCharge[cbc:ChargeIndicator = false()] | /cn:CreditNote/cac:AllowanceCharge[cbc:ChargeIndicator = false()]"/>
  <param name="Document_level_charges " value="/ubl:Invoice/cac:AllowanceCharge[cbc:ChargeIndicator = true()] | /cn:CreditNote/cac:AllowanceCharge[cbc:ChargeIndicator = true()]"/>
  <param name="Invoice_line_allowances " value="//cac:InvoiceLine/cac:AllowanceCharge[cbc:ChargeIndicator = false()] | //cac:CreditNoteLine/cac:AllowanceCharge[cbc:ChargeIndicator = false()]"/>
  <param name="Invoice_line_charges " value="//cac:InvoiceLine/cac:AllowanceCharge[cbc:ChargeIndicator = true()] | //cac:CreditNoteLine/cac:AllowanceCharge[cbc:ChargeIndicator = true()]"/>
  <param name="Payment_instructions " value="cac:PaymentMeans"/>
  <param name="Additional_supporting_documents " value="cac:AdditionalDocumentReference"/>
  <param name="Item_attributes " value="//cac:AdditionalItemProperty"/>
  <param name="Preceding_Invoice" value="cac:BillingReference"/>
  <param name="Tax_subtotal" value="cac:TaxTotal/cac:TaxSubtotal"/>
  <param name="Invoice " value="/ubl:Invoice | /cn:CreditNote"/>
  <param name="Buyer_postal_address" value="cac:AccountingCustomerParty/cac:Party/cac:PostalAddress"/>
  <param name="Deliver_to_address" value="cac:Delivery/cac:DeliveryLocation/cac:Address"/>
  <param name="Buyer_electronic_address" value="cac:AccountingCustomerParty/cac:Party/cbc:EndpointID"/>
  <param name="Item_standard_identifier" value="cac:InvoiceLine/cac:Item/cac:StandardItemIdentification/cbc:ID | cac:CreditNoteLine/cac:Item/cac:StandardItemIdentification/cbc:ID"/>
  <param name="Item_classification_identifier" value="cac:InvoiceLine/cac:Item/cac:CommodityClassification/cbc:ItemClassificationCode | cac:CreditNoteLine/cac:Item/cac:CommodityClassification/cbc:ItemClassificationCode "/>
  <param name="Percent" value="(//cac:InvoiceLine/cac:Item/cac:ClassifiedTaxCategory/cbc:Percent | //cac:AllowanceCharge/cac:TaxCategory/cbc:Percent)"/>
</pattern>
